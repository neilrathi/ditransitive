library(gbNgram)
install.packages('gbNgram')
devtools::install_github(chrismeserole/gbNgram)
library(devtools)
devtools::install_github(chrismeserole/gbNgram)
devtools::install_github(chrismeserole/gbNgram)
library(gbNgram)
devtools::install_github(chrismeserole/gbNgram)
library(devtools)
devtools::install_github(chrismeserole/gbNgram)
library(devtools)
library(devtools)
library(gbNgram)
library(devtools)
devtools::install_github(chrismeserole/gbNgram)
library(gbNgram)
devtools::install_github('chrismeserole/gbNgram')
library(gbNgram)
df <- data.frame(index=c(1, 2, 3, 4, 5, 6),
var1=c(4, 4, 5, 4, 3, 2),
var2=c(1, 2, 4, 4, 6, 9),
var3=c(9, 9, 9, 5, 5, 3))
df
df <- read.csv('accuracy.csv')
#create data frame
df <- read.csv('accuracy.csv')
df <- read.csv('accuracy.csv')
df <- read.csv('accuracy.csv')
library(tidyverse)
library(extrafont) # font embedding
library(gridExtra)
rm(list=ls())
setwd("~/csboy/ditransitive/")
library(rwebppl)
webppl(program_file = 'models/model.js', data = df)
df
df <- webppl(program_file = 'models/model.js', data = df)
df
df$0
df$1
type(df)
typeof(df)
mydf <- data.table::as.data.table(c('name' = df), .keep.rownames = "word")
mydf
df$V1
df
mydf$V1
df <- data.frame('A', 'A', 0, 0, 0)
df
names(df) <- c("model", "length", 'mean', 'lower', 'upper')
df
output <- c(webppl(program_file = 'models/model.js', data = df))
output
df <- data.frame(prob = output)
df
settings <- data.frame(recipientprior = 0.1, informativity = 'high')
settings
settings <- data.frame(recipientprior = 0.1, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
output
data.frame(prob = output)[1,'prob']
recipient_probs <- data.frame()
names(recipient_probs) <- c("hello", "goodbye")
recipient_probs <- data.frame(double, double)
recipient_probs <- data.frame(double(), double())
names(recipient_probs) <- c("hello", "goodbye")
recipient_probs
recipient_probs <- data.frame(double(), double())
names(recipient_probs) <- c("prior", "prob")
df <- data.frame(double(), double())
names(df) <- c("prior", "prob")
settings <- data.frame(recipientprior = 0.1, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
df[nrow(df) + 1,] <- c(0.1, data.frame(prob = output)[1, 'prob'])
df
df <- data.frame(double(), double())
names(df) <- c("prior", "prob")
priors <- c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9)
for (p in priors) {
settings <- data.frame(recipientprior = 0.1, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
df[nrow(df) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
df
df <- data.frame(double(), double())
names(df) <- c("prior", "prob")
priors <- c(0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9)
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
df[nrow(df) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
df
df <- data.frame(double(), double())
names(df) <- c("prior", "prob")
priors <- c(0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45)
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
df[nrow(df) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
df
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
df <- data.frame(double(), double())
names(df) <- c("prior", "prob")
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = 'high')
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
df[nrow(df) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
df
df <- data.frame(c(), data.frame())
df
names(df) <- c('informativity', 'probs')
df <- data.frame(c(), data.frame)
df <- data.frame(c, data.frame)
df <- data.frame(c(), data.frame())
names(df) <- c('informativity', 'probs')
df <- data.frame(c(), data.frame(double(), double()))
df
names(df) <- c('informativity', 'probs')
df
df <- data.frame(char(), data.frame(double(), double()))
df <- data.frame(str(), data.frame(double(), double()))
df <- data.frame('', data.frame(double(), double()))
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c("prior", "prob")
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
dfs[[i]] <- idf
}
dfs
dfs
for (df in dfs) {}
combined <- bind_rows(dfs$low, .id = "source")
combined
combined <- bind_rows(combined, dfs$med, .id = "source")
combined
combined <- bind_rows(combined, dfs$high, .id = "source")
combined
combined_df <- bind_rows(dfs$low, .id = "source")
combined_df <- bind_rows(combined_df, dfs$med, .id = "source")
combined_df <- bind_rows(combined_df, dfs$high, .id = "source")
combined_df
dfs <- lapply(seq_along(dfs), function(i) {
dfs[[i]]$source <- as.character(i)
dfs[[i]]
})
# Combine the data frames into a single data frame
combined_df <- do.call(rbind, dfs)
combined_df
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_point() +
facet_wrap(~ source, nrow = 1)
ggplot(combined_df, aes(x = prior, y = probs)) +
geom_bar() +
facet_wrap(~ source, nrow = 1)
ggplot(combined_df, aes(x = prior, y = probs)) +
geom_bar(stat = 'identity') +
facet_wrap(~ source, nrow = 1)
combined_df
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
facet_wrap(~ source, nrow = 1)
dfs <- lapply(seq_along(dfs), function(i) {
dfs[[i]]$source <- i
dfs[[i]]
})
dfs
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c("prior", "prob")
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
dfs[[i]] <- idf
}
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c("prior", "prob")
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
idf$informativity <- i
dfs[[i]] <- idf
}
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c("prior", "prob")
for (p in priors) {
settings <- data.frame(recipientprior = p, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
idf$informativity <- i
dfs[[i]] <- idf
}
dfs
combined_df <- do.call(rbind, dfs)
combined_df
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
facet_wrap(~ informativity, nrow = 1)
combined_df
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
facet_wrap(~ informativity, nrow = 1)
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
facet_wrap(~ informativity, nrow = 1)
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
ylim(0, 1) +
xlim(0, 1) +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
ylim(0, 1) +
xlim(0, 0.75) +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
ylim(0, 1) +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggsave('plots/priors.pdf')
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c("cost", "prob")
for (p in priors) {
settings <- data.frame(recipientcost = p, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, data.frame(prob = output)[1, 'prob'])
}
idf$informativity <- i
dfs[[i]] <- idf
}
combined_df <- do.call(rbind, dfs)
ggplot(combined_df, aes(x = prior, y = prob)) +
geom_bar(stat = 'identity') +
ylim(0, 1) +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
combined_df
ggplot(combined_df, aes(x = cost, y = prob)) +
geom_bar(stat = 'identity') +
ylim(0, 1) +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggsave('plots/cost.pdf')
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
costs <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double())
names(idf) <- c('prior', 'cost', 'informativity', 'prob')
for (p in priors) {
for (cost in costs) {
settings <- data.frame(recipientprior = p, recipientcost = cost, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, cost, i, data.frame(prob = output)[1, 'prob'])
}
}
dfs[[i]] <- idf
}
dfs <- list()
informativities = c('low', 'med', 'high')
priors <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
costs <- c(0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75)
for (i in informativities) {
idf <- data.frame(double(), double(), double(), double())
names(idf) <- c('prior', 'cost', 'informativity', 'prob')
for (p in priors) {
for (cost in costs) {
settings <- data.frame(recipientprior = p, recipientcost = cost, informativity = i)
output <- c(webppl(program_file = 'models/model.js', data = settings, data_var = "dataFromR"))
idf[nrow(idf) + 1,] <- c(p, cost, i, data.frame(prob = output)[1, 'prob'])
}
}
dfs[[i]] <- idf
}
combined_df <- do.call(rbind, dfs)
combined_df$prior <- factor(combined_df$prior)
combined_df$cost <- factor(combined_df$cost)
combined_df$informativity <- factor(combined_df$informativity)
combined_df
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
combined_df <- do.call(rbind, dfs)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
combined_df$informativity <- factor(combined_df$informativity)
combined_df
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
typeof(combined_df$cost)
combined_df$prior <- as.numeric(combined_df$prior)
combined_df$cost <- as.numeric(combined_df$cost)
combined_df$informativity <- factor(combined_df$informativity)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
typeof(combined_df$cost)
typeof(combined_df$prior)
typeof(combined_df$pro )
combined_df$prob <- as.numeric(combined_df$prob)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
# scale_fill_gradient(low = "white", high = "blue") +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
library(viridis)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_viridis() +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
combined_df
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_gradient(low = 'white', high = 'black') +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_viridis() +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~informativity)
ggplot(combined_df, aes(x = prior, y = cost, fill = prob)) +
geom_tile() +
scale_fill_viridis() +
labs(x = "prior probability of recipient", y = "cost of recipient", fill = "probability") +
facet_wrap(~factor(informativity, levels=c('low', 'med', 'high')))
write.csv(combined_df, 'prior-cost-prob.csv', sep = '\t')
write.csv(combined_df, 'prior-cost-prob.csv', delimiter = '\t')
write.csv(combined_df, file = 'prior-cost-prob.csv', sep = '\t')
write.table(combined_df, file = "prior-cost-prob.csv", sep = "\t", quote = FALSE, row.names = FALSE)
ggsave('plots/prior-cost.pdf')
