library(tidyverse)
install.packages('devtools')
library(tidyverse)
library(extrafont) # font embedding
rm(list=ls())
setwd('~/csboy/ditransitive/')
library(rwebppl)
devtools::install_github("mhtess/rwebppl")
library(rwebppl)
webppl(program_file = 'ditransitive.webppl', data = df)
webppl(program_file = "ditransitive.webppl", data = df)
webppl(program_file = "ditransitive.webppl", data = df)
webppl(program_file = "ditransitive.webppl", data = df)
setwd("~/csboy/ditransitive/")
webppl(program_file = "ditransitive.webppl", data = df)
webppl(program_file = "ditransitive.wppl", data = df)
df
data
webppl(program_file = "ditransitive.wppl", data = df, data_var = "myDF")
myDF
my_df <- webppl(program_file = "ditransitive.wppl", data = df)
my_df
data <- webppl(program_file = "ditransitive.wppl", data = df)
data
data <- webppl(program_file = "ditransitive.wppl", data = df)
data
data[book]
data[support]
data.support
data['support']
data['book']
data[1]
data[1][1]
data[1][1][1]
data[1, 1]
data[1, ]
data[1, 2]
data <- webppl(program_file = "ditransitive.wppl", data = df)
library(tidyverse)
library(extrafont) # font embedding
rm(list=ls())
setwd("~/csboy/ditransitive/")
library(rwebppl)
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
for (file in wppl_files) {
# read data:
data$file <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
}
data
data$file
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
for (file in wppl_files) {
# read data:
data[[file]] <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
}
data
library(rwebppl)
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
priors <- read.csv("priors.csv")
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[1, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
data
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[1, 2]
}
print(temp$prob)
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[i, 2]
}
print(priors[1, 2])
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
print(priors[1, 2])
priors
priors <- read.csv("priors.csv", sep = '\t')
priors
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[i, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
data
for (i in data) {
ggplot(i, aes(x = support, y = prob)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", i))
}
ggplot(data$CostPrior, aes(x = support, y = prob)) +
geom_bar(stat = "identity")
ggplot(data$CostPrior, aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity")
for (i in data) {
ggplot(i, aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", i))
}
install.packages('gridExtra')
plot_list <- list()
for (i in data) {
p <- ggplot(i, aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", i))
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, ncol = 2, top = "Combined Plot Title")
library(gridExtra)
plot_list <- list()
for (i in data) {
p <- ggplot(i, aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", i))
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, ncol = 2, top = "Combined Plot Title")
for (i in data) {
print(i)
}
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name))
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, ncol = 2, top = "Combined Plot Title")
plot_list
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name)) +
labs(x = "x", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name)) +
labs(x = "", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name))
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name))
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
priors <- read.csv("priors.csv", sep = '\t')
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[i, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
data
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(paste0("Graph ", name))
plot_list[[length(plot_list) + 1]] <- p
}
grid.arrange(grobs = plot_list, top = "Combined Plot Title")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labes(x = "Word", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "Word", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Cost Priors")
priors <- read.csv("priors.csv", sep = '\t')
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste(file, ".wppl", sep = ""),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors[i, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "Word", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list, top = "Cost Priors")
data
plot_list
grid.arrange(grobs = plot_list, top = "Cost Priors")
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
grid.arrange(grobs = plot_list)
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]], aes(x = support, y = prob)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability") +
scale_fill_viridis_d()
plot_list[[length(plot_list) + 1]] <- p
}
grid.arrange(grobs = plot_list)
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]],
aes(x = support, y = prob, fill = support),
show.legend = FALSE) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
grid.arrange(grobs = plot_list)
data
plot_list
grid.arrange(grobs = plot_list)
plot_list
plot_list <- list()
plot_list
for (name in names(data)) {
p <- ggplot(data[[name]],
aes(x = support, y = prob, fill = support),
show.legend = FALSE) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability")
plot_list[[length(plot_list) + 1]] <- p
}
plot_list
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]],
aes(x = support, y = prob, fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability") +
theme(legend.position = "none")
plot_list[[length(plot_list) + 1]] <- p
}
plot_list
grid.arrange(grobs = plot_list)
ggsave("probabilities.pdf", width=6, height=6, units = "in", dpi = 300)
g <- arrangeGrob(grobs = plot_list)
ggsave("probabilities.pdf", g, width=6, height=6, units = "in", dpi = 300)
g
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
priors_likely <- read.csv("priors_likely.csv", sep = '\t')
library(tidyverse)
library(extrafont) # font embedding
library(gridExtra)
rm(list=ls())
setwd("~/csboy/ditransitive/")
library(rwebppl)
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
priors_likely <- read.csv("priors/priors_likely.csv", sep = '\t')
priors_unlikely <- read.csv("priors/priors_unlikely.csv", sep = '\t')
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste0("models/", file, ".wppl"),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors_likely[i, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]],
aes(x = support,
y = prob,
fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability") +
theme(legend.position = "none")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
g <- arrangeGrob(grobs = plot_list)
ggsave("plots/probabilities.pdf", g, width=6, height=6, units = "in", dpi = 300)
library(tidyverse)
library(extrafont) # font embedding
library(gridExtra)
rm(list=ls())
setwd("~/csboy/ditransitive/")
library(rwebppl)
wppl_files <- list("NoCostNoPrior",
"CostNoPrior",
"NoCostPrior",
"CostPrior")
data <- list()
priors_likely <- read.csv("priors/priors_likely.csv", sep = '\t')
priors_unlikely <- read.csv("priors/priors_unlikely.csv", sep = '\t')
for (file in wppl_files) {
# read data:
temp <- webppl(program_file = paste0("models/", file, ".wppl"),
data = df)
if (!grepl("NoPrior", file)) {
for (i in 1:nrow(temp)) {
# load in and multiply by priors:
temp[i, 2] <- temp[i, 2] * priors_likely[i, 2]
}
# normalize
temp$prob <- scale(temp$prob, center = FALSE, scale = sum(temp$prob))
}
data[[file]] <- temp
}
plot_list <- list()
for (name in names(data)) {
p <- ggplot(data[[name]],
aes(x = support,
y = prob,
fill = support)) +
geom_bar(stat = "identity") +
ggtitle(name) +
labs(x = "", y = "Probability") +
theme(legend.position = "none")
plot_list[[length(plot_list) + 1]] <- p
}
# Combine all ggplot objects into a single plot using grid.arrange()
g <- arrangeGrob(grobs = plot_list)
ggsave("plots/probabilities.pdf", g, width=6, height=6, units = "in", dpi = 300)
g
